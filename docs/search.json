[{"path":"index.html","id":"preamble","chapter":"1 Preamble","heading":"1 Preamble","text":"manual aims providing training implementation genomics-enabled decision support NextGen Cassava Breeding Project community practice partnerships.Associated manual provide codebase standard operating procedures reproducible BreedBase-integrated workflow.Two major sections currently planned:Genomic (Mate) Selection Workflow Example: Using example dataset Cassavabase, work hands-, demos, full workflow. Provide skeleton pipeline segment: purpose, SOP, checklist, template, necessary inputs, KPI outputs.Genomic (Mate) Selection Workflow Example: Using example dataset Cassavabase, work hands-, demos, full workflow. Provide skeleton pipeline segment: purpose, SOP, checklist, template, necessary inputs, KPI outputs.Data wrangling reproducibility: Intro hands-computing data environment / manipulation side things. Learning resources/links. excel! R, Tidyverse, functions, loops, bash / command line, genomic data manipulation programs.Data wrangling reproducibility: Intro hands-computing data environment / manipulation side things. Learning resources/links. excel! R, Tidyverse, functions, loops, bash / command line, genomic data manipulation programs.Collectively two components support learning Genomic prediction selection: practice.Genomic prediction selection: theoryStudents also may need/want learn statistical quantitative genetic theory. additional section planned , minimum provide guidance access reading learning resources. starters, (Lynch Walsh 1998; Falconer FALCONER 2003; Isik et al. 2017; Bernardo 2020)!","code":""},{"path":"outline.html","id":"outline","chapter":"2 Outline","heading":"2 Outline","text":"Download training data: Download training data using BreedBase, including: phenotypes, genotypes, pedigreeQC format field trial data.","code":""},{"path":"download-training-data.html","id":"download-training-data","chapter":"3 Download training data","heading":"3 Download training data","text":"","code":""},{"path":"download-training-data.html","id":"cassavabase-download","chapter":"3 Download training data","heading":"3.1 Cassavabase download","text":"Go Cassavabase favorite alternative BreedBase.Login.Go Search > Wizard","code":""},{"path":"download-training-data.html","id":"example-dataset","chapter":"3 Download training data","heading":"3.2 Example dataset","text":"sake example, choose small, real dataset think exemplify data stored DB. , choose data key features, including pedigree relationship high-proportion genotyped accessions.Use Wizard (Breeding Program: IITA > Years: 2013 > Locations: Ibadan >Use Wizard (Breeding Program: IITA > Years: 2013 > Locations: Ibadan >Choose 2 trials 13geneticgainIB 13.GS.C1.CE.864.IB –> create list “ExampleIITAtrials”Choose 2 trials 13geneticgainIB 13.GS.C1.CE.864.IB –> create list “ExampleIITAtrials”Clear Wizard panesClear Wizard panesStart new list “ExampleIITAtrials” > Accessions: “Select ” –> create list “ExampleIITAaccesions”\nStart new list “ExampleIITAtrials” > Accessions: “Select ” –> create list “ExampleIITAaccesions”Genotyping Protocols > “West Africa Clones Dart-GBS 2020”Genotyping Protocols > “West Africa Clones Dart-GBS 2020”Download Genotypes, Phenotypes Metadata (Bottom right Search Wizard page)\n“Related Genotype Data”\nDownload genotypes (“VCF File Format”)\ngoing take ….. timed compute went sleep, came back refreshed site, file ready--go downloaded right away.\n\n“Related Trial Metadata” –> exports .csv named “phenotypes.csv,” awkward….\n“Related Trial Phenotypes” –> exports .csv also named “phenotypes.csv” auto-changed “phenotype (1).csv”\nManually rename store : data/phenotype.csv data/metadata.csv\n\nDownload Genotypes, Phenotypes Metadata (Bottom right Search Wizard page)“Related Genotype Data”\nDownload genotypes (“VCF File Format”)\ngoing take ….. timed compute went sleep, came back refreshed site, file ready--go downloaded right away.\n“Related Genotype Data”Download genotypes (“VCF File Format”)going take ….. timed compute went sleep, came back refreshed site, file ready--go downloaded right away.“Related Trial Metadata” –> exports .csv named “phenotypes.csv,” awkward….“Related Trial Metadata” –> exports .csv named “phenotypes.csv,” awkward….“Related Trial Phenotypes” –> exports .csv also named “phenotypes.csv” auto-changed “phenotype (1).csv”\nManually rename store : data/phenotype.csv data/metadata.csv\n“Related Trial Phenotypes” –> exports .csv also named “phenotypes.csv” auto-changed “phenotype (1).csv”Manually rename store : data/phenotype.csv data/metadata.csvDownload Pedigree (hold / blocked)\nDownload > Download Pedigree\n“ExampleIITAaccessions” list > Direct parents \n… list failed validate….\nClick “lists” top right > Click “Validate” checkmark row list accessions….. “Working…..” –> says list passed validation…\nWorking DB team…\n\nDownload Pedigree (hold / blocked)Download > Download PedigreeDownload > Download Pedigree“ExampleIITAaccessions” list > Direct parents \n… list failed validate….\nClick “lists” top right > Click “Validate” checkmark row list accessions….. “Working…..” –> says list passed validation…\nWorking DB team…\n“ExampleIITAaccessions” list > Direct parents … list failed validate….… list failed validate….Click “lists” top right > Click “Validate” checkmark row list accessions….. “Working…..” –> says list passed validation…Click “lists” top right > Click “Validate” checkmark row list accessions….. “Working…..” –> says list passed validation…Working DB team…Working DB team…","code":""},{"path":"prepare-training-data.html","id":"prepare-training-data","chapter":"4 Prepare training data","heading":"4 Prepare training data","text":"Context Purpose: step, quality control, clean format training data analysis.Upstream: Section 3 - training data downloadDownstream: pretty much everythingInputs: “Raw” field trial dataExpected outputs: “Cleaned” field trial data","code":"\nsuppressMessages(library(tidyverse)); \nsuppressMessages(library(genomicMateSelectR))"},{"path":"prepare-training-data.html","id":"read-db-data","chapter":"4 Prepare training data","heading":"4.1 Read DB data","text":"Load phenotype metadata downloads R.built function readDBdata simply wraps around read.csv, reads merges metadata plot-basis data. metadataFile= argument can left NULL.HINT: point manual, reference use custom function genomicMateSelectR, encourage check reference page function, e.g. readDBdata(). look code typing e.g. readDBdata R console.","code":"\ndbdata<-readDBdata(phenotypeFile = here::here(\"data\",\"phenotype.csv\"),\n                   metadataFile = here::here(\"data\",\"metadata.csv\"))\n#> Joining, by = c(\"studyYear\", \"programDbId\", \"programName\", \"programDescription\", \"studyDbId\", \"studyName\", \"studyDescription\", \"studyDesign\", \"plotWidth\", \"plotLength\", \"fieldSize\", \"fieldTrialIsPlannedToBeGenotyped\", \"fieldTrialIsPlannedToCross\", \"plantingDate\", \"harvestDate\", \"locationDbId\", \"locationName\")"},{"path":"prepare-training-data.html","id":"group-and-select-trials-to-analyze","chapter":"4 Prepare training data","heading":"4.2 Group and select trials to analyze","text":"step present standard pipeline often bulk-download data breeding program sort trials--interest fact.think better future way use trial-lists BreedBase communicate exactly trials, years, locations desired download, maybe also traits.Unecessary example dataset chosen.","code":""},{"path":"prepare-training-data.html","id":"traits-and-trait-abbreviations","chapter":"4 Prepare training data","heading":"4.3 Traits and Trait Abbreviations","text":"Cassavabase downloads use long column-names corresponding full trait-ontology name. convenience, replace names abbreviations, documented . eventual upload analysis results, names need restored ontology terms.also use opportunity subselect traits.Run function renameAndSelectCols() rename columns remove unselected traits.","code":"\ntraitabbrevs<-tribble(~TraitAbbrev,~TraitName,\n        \"CMD1S\",\"cassava.mosaic.disease.severity.1.month.evaluation.CO_334.0000191\",\n        \"CMD3S\",\"cassava.mosaic.disease.severity.3.month.evaluation.CO_334.0000192\",\n        \"CMD6S\",\"cassava.mosaic.disease.severity.6.month.evaluation.CO_334.0000194\",\n        \"DM\",\"dry.matter.content.percentage.CO_334.0000092\",\n        \"RTWT\",\"fresh.storage.root.weight.per.plot.CO_334.0000012\",\n        \"NOHAV\",\"plant.stands.harvested.counting.CO_334.0000010\")\ntraitabbrevs %>% gt::gt()#rmarkdown::paged_table()\ndbdata<-renameAndSelectCols(traitabbrevs,\n                            indata=dbdata,\n                            customColsToKeep = c(\"observationUnitName\"))\n#> Warning in mask$eval_all_mutate(quo): NAs introduced by\n#> coercion\n#> Joining, by = \"TraitName\""},{"path":"prepare-training-data.html","id":"qc-trait-values","chapter":"4 Prepare training data","heading":"4.4 QC Trait Values","text":"point pipeline, check trait values allowable ranges.\nDifferent ways approach . Feel free make plots data!database also mechanisms ensure trait values within allowable ranges.\nNevertheless, habit, simple ad hoc approach :","code":"\n# comment out the traits not present in this dataset\ndbdata<-dbdata %>% \n  mutate(CMD1S=ifelse(CMD1S<1 | CMD1S>5,NA,CMD1S),\n         CMD3S=ifelse(CMD3S<1 | CMD3S>5,NA,CMD3S),\n         CMD6S=ifelse(CMD6S<1 | CMD6S>5,NA,CMD6S), \n         #CMD9S=ifelse(CMD9S<1 | CMD9S>5,NA,CMD9S),\n         # CGM=ifelse(CGM<1 | CGM>5,NA,CGM),\n         # CGMS1=ifelse(CGMS1<1 | CGMS1>5,NA,CGMS1),\n         # CGMS2=ifelse(CGMS2<1 | CGMS2>5,NA,CGMS2),\n         DM=ifelse(DM>100 | DM<=0,NA,DM),\n         RTWT=ifelse(RTWT==0 | NOHAV==0 | is.na(NOHAV),NA,RTWT),\n         # SHTWT=ifelse(SHTWT==0 | NOHAV==0 | is.na(NOHAV),NA,SHTWT),\n         # RTNO=ifelse(RTNO==0 | NOHAV==0 | is.na(NOHAV),NA,RTNO),\n         NOHAV=ifelse(NOHAV==0,NA,NOHAV),\n         NOHAV=ifelse(NOHAV>42,NA,NOHAV)\n         #RTNO=ifelse(!RTNO %in% 1:10000,NA,RTNO)\n         )"},{"path":"prepare-training-data.html","id":"post-qc-composite-traits","chapter":"4 Prepare training data","heading":"4.5 Post-QC: composite traits","text":"Now component traits QC’d, ’s time compute composite traits.composite traits, mean traits computed combinations traits.Examples cassava: season-wide mean disease severity, harvest index, fresh root yield.","code":""},{"path":"prepare-training-data.html","id":"season-wide-mean-disease-severity","chapter":"4 Prepare training data","heading":"4.6 Season-wide mean disease severity","text":"","code":"\n# [NEW AS OF APRIL 2021]\n## VERSION with vs. without CBSD\n## Impervious to particular timepoints between 1, 3, 6 and 9 scores\n\n# Without CBSD (West Africa)\ndbdata<-dbdata %>% \n  mutate(MCMDS=rowMeans(.[,colnames(.) %in% c(\"CMD1S\",\"CMD3S\",\"CMD6S\",\"CMD9S\")], na.rm = T)) %>% \n  select(-any_of(c(\"CMD1S\",\"CMD3S\",\"CMD6S\",\"CMD9S\")))\n\n# With CBSD (East Africa)\n# dbdata<-dbdata %>% \n#   mutate(MCMDS=rowMeans(.[,colnames(.) %in% c(\"CMD1S\",\"CMD3S\",\"CMD6S\",\"CMD9S\")], na.rm = T),\n#          MCBSDS=rowMeans(.[,colnames(.) %in% c(\"CBSD1S\",\"CBSD3S\",\"CBSD6S\",\"CBSD9S\")], na.rm = T)) %>% \n#   select(-any_of(c(\"CMD1S\",\"CMD3S\",\"CMD6S\",\"CMD9S\",\"CBSD1S\",\"CBSD3S\",\"CBSD6S\",\"CBSD9S\")))"},{"path":"prepare-training-data.html","id":"fresh-root-yield-fyld","chapter":"4 Prepare training data","heading":"4.7 Fresh root yield (FYLD)","text":"RTWT (fresh root weight per plot kg) –> FYLD (fresh root yield tons per hectare)\\[FYLD = \\frac{RTWT_{kg / plot}}{MaxHarvestedPlantsPerPlot \\times PlantSpacing}\\times10 \\]NOTE: MaxHarvestedPlantsPerPlot formula distinguish plantsPerPlot meta-data field, case net-plot harvest used. words, value total number plants intended harvest plot.PlantSpacing area \\(m^2\\) per plant.example trial data, plantsPerPlot meta-data field empty. Luckily, since two trials, make quick summary NOHAV data, determine correct values.RECOMMEND INPUTING plantsPerPlot meta-data cassavabaseSo GS.C1 trial 2.5 \\(m^2\\) plots, GeneticGain trial 8 \\(m^2\\).quick density plot reveals GeneticGain trial likely planted 10 plants/plot, GS.C1.CE 5 plants/plot. (Disclosure: know true experience.)Additional things compute:log-transform yield traits: habit based experience. Linear mixed-models normally distributed homoskedastic residuals, don’t log-transform response variable often helps. FYLD related traits, always log-transform.Debatable whether better. Let’s dwell . Onward!","code":"\ndbdata %>% count(studyYear,studyName,studyDesign,plotWidth,plotLength)\n#> # A tibble: 2 × 6\n#>   studyYear studyName studyDesign plotWidth plotLength     n\n#>       <int> <chr>     <chr>           <int>      <dbl> <int>\n#> 1      2013 13.GS.C1… Augmented           1        2.5   864\n#> 2      2013 13geneti… Augmented           1        8     749\ndbdata %>% \n     ggplot(.,aes(x=NOHAV, fill=studyName)) + geom_density(alpha=0.75)\n#> Warning: Removed 71 rows containing non-finite values\n#> (stat_density).\ndbdata %<>% \n     # plot area in meters squared\n     mutate(plotArea=plotWidth*plotLength,\n            # Number of plants per plot\n            plantsPerPlot=ifelse(studyName==\"13geneticgainIB\",10,5))\ndbdata %<>% \n     mutate(PlantSpacing=plotArea/plantsPerPlot,\n            FYLD=RTWT/(plantsPerPlot*PlantSpacing)*10)\ndbdata %>% ggplot(.,aes(x=FYLD,fill=studyName)) + geom_density(alpha=0.75)\n#> Warning: Removed 89 rows containing non-finite values\n#> (stat_density).\n# I log transform yield traits \n# to satisfy homoskedastic residuals assumption \n# of linear mixed models\ndbdata %<>% \n     mutate(DYLD=FYLD*(DM/100),\n            logFYLD=log(FYLD),\n            logDYLD=log(DYLD),\n            PropNOHAV=NOHAV/plantsPerPlot) \n# remove non transformed / per-plot (instead of per area) traits\ndbdata %<>% select(-RTWT,-FYLD,-DYLD)\ndbdata %>% ggplot(.,aes(x=logFYLD,fill=studyName)) + geom_density(alpha=0.75)\n#> Warning: Removed 89 rows containing non-finite values\n#> (stat_density)."},{"path":"prepare-training-data.html","id":"check-genotype-to-phenotype-matches","chapter":"4 Prepare training data","heading":"4.8 Check genotype-to-phenotype matches","text":"step, past (see example), use multiple external flat files custom code, built time, figure DNA samples, , match eatch field plot.genotypes phenotypes derived database, issue tutorial.","code":""},{"path":"prepare-training-data.html","id":"check-detect-experimental-designs","chapter":"4 Prepare training data","heading":"4.9 Check / “detect” experimental designs?","text":"step, past, certain experimental designs trials downloaded. also certain designs represented column-names. reason, developed another ad hoc custom code “detect” designs. built genomicMateSelectR function detectExptDesigns(). See example .necessary example dataset. However, let’s check:","code":"\ndbdata %>% count(studyName,studyDesign, numberBlocks,replicate, blockNumber, entryType)\n#> # A tibble: 4 × 7\n#>   studyName   studyDesign numberBlocks replicate blockNumber\n#>   <chr>       <chr>              <int>     <int>       <int>\n#> 1 13.GS.C1.C… Augmented              1         1           1\n#> 2 13.GS.C1.C… Augmented              1         1           1\n#> 3 13geneticg… Augmented              1         1           1\n#> 4 13geneticg… Augmented              1         1           1\n#> # … with 2 more variables: entryType <chr>, n <int>"},{"path":"prepare-training-data.html","id":"checklist-and-kpi","chapter":"4 Prepare training data","heading":"4.10 Checklist and KPI","text":"[ ]","code":""},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
